{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0555a116\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"w-100 h-100 m-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" inputing text and submitting \"), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.textInput = $event),\n    rows: \"20\",\n    cols: \"100\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.textInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.speak && $options.speak(...args)),\n    class: \"btn btn-primary\"\n  }, \"Read Text\"), _createCommentVNode(\" <button @click=\\\"speakWithMicrosoft\\\" class=\\\"btn btn-primary\\\">\\n      Read Text with Microsoft\\n    </button> \"), _createCommentVNode(\" Displaying text as it is being read \"), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.words, (word, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      class: _normalizeClass({\n        highlighted: index === $data.currentWordIndex\n      })\n    }, [_createTextVNode(_toDisplayString(word) + \" \", 1 /* TEXT */), _hoisted_2], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" showing letters as they are being spoken \"), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.characters, (char, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      class: _normalizeClass({\n        'highlighted-pink': index === $data.currentLetterIndex\n      })\n    }, _toDisplayString(char), 3 /* TEXT, CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Phonemes \"), _createElementVNode(\"img\", {\n    src: $data.currentPhoneme\n  }, null, 8 /* PROPS */, _hoisted_3)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$data","textInput","$event","rows","cols","onClick","_cache","args","$options","speak","_Fragment","_renderList","words","word","index","key","_normalizeClass","highlighted","currentWordIndex","_hoisted_2","characters","char","currentLetterIndex","src","currentPhoneme","_hoisted_3"],"sources":["/Users/lopesti/WebTeam/avatar-narrator-poc/src/components/NarratingAvatar.vue"],"sourcesContent":["<template>\n  <div class=\"w-100 h-100 m-5\">\n    <!-- inputing text and submitting -->\n    <textarea v-model=\"textInput\" rows=\"20\" cols=\"100\"></textarea>\n    <button @click=\"speak\" class=\"btn btn-primary\">Read Text</button>\n\n    <!-- <button @click=\"speakWithMicrosoft\" class=\"btn btn-primary\">\n      Read Text with Microsoft\n    </button> -->\n\n    <!-- Displaying text as it is being read -->\n    <div>\n      <span\n        v-for=\"(word, index) in words\"\n        :key=\"index\"\n        :class=\"{ highlighted: index === currentWordIndex }\"\n      >\n        {{ word }} <span> </span>\n      </span>\n    </div>\n\n    <!-- showing letters as they are being spoken -->\n    <div>\n      <span\n        v-for=\"(char, index) in characters\"\n        :key=\"index\"\n        :class=\"{ 'highlighted-pink': index === currentLetterIndex }\"\n      >\n        {{ char }}\n      </span>\n    </div>\n    <!-- Phonemes -->\n    <img :src=\"currentPhoneme\" />\n  </div>\n</template>\n\n<script>\nimport imageAEI from \"../assets/AEI.png\";\nimport imageBMP from \"../assets/BMP.png\";\nimport imageN from \"../assets/Nn.png\";\nimport imageCDGKNRSTXYZ from \"../assets/CDGKNRSTXYZ.png\";\nimport imageCHJSONSH from \"../assets/CH,J,SH.png\";\nimport imageFV from \"../assets/FV.png\";\nimport imageL from \"../assets/L.png\";\nimport imageO from \"../assets/O.png\";\nimport imageQW from \"../assets/QW.png\";\nimport imageTH from \"../assets/TH.png\";\nimport imageU from \"../assets/U.png\";\nimport imageE from \"../assets/E.png\";\n\nexport default {\n  data() {\n    return {\n      textInput:\n        \"“Poor Donnie; he was man caught in the wrong place at the wrong time. He died too young. We’ll miss him”… There. That could have been Donnie’s eulogy. Instead, John Goodman’s Walter takes what should’ve been a simple, thoughtful speech to places that only his dark mind could go. Contrasting Jeff Bridges' passive, mellowed-out Dude, Walter’s a man who never got over Vietnam. Quick to anger, he begins Donnie’s eulogy with an attempt to provide a beautiful and poised tribute – but it only comes off as awkward. He then quickly moves past his departed friend’s memorial to lambaste god for the lives lost in Vietnam. It takes a lot to get The Dude mad, but this hilariously deadpan scene gets the job done.\",\n      words: [],\n      characters: [],\n      currentWordIndex: -1,\n      currentLetterIndex: 0,\n      speech: new SpeechSynthesisUtterance(),\n      currentPhoneme: \"\",\n      letterMapping: {\n        a: imageAEI,\n        b: imageBMP,\n        c: imageCDGKNRSTXYZ,\n        ch: imageCHJSONSH,\n        d: imageFV,\n        e: imageL,\n        f: imageO,\n        g: imageQW,\n        h: imageTH,\n        i: imageU,\n        j: imageN,\n        k: imageE,\n        l: imageAEI,\n        m: imageBMP,\n        n: imageCDGKNRSTXYZ,\n        o: imageCHJSONSH,\n        p: imageFV,\n        q: imageL,\n        r: imageO,\n        s: imageQW,\n        t: imageTH,\n        u: imageU,\n        v: imageN,\n        w: imageE,\n        x: imageAEI,\n        y: imageBMP,\n        z: imageCDGKNRSTXYZ,\n      },\n    };\n  },\n  computed: {},\n  methods: {\n    speak() {\n      this.startGettingLetters();\n      this.words = this.textInput.trim().split(/\\s+/);\n\n      this.currentWordIndex = 0;\n\n      this.speech.text = this.textInput;\n      this.speech.rate = 1;\n\n      this.speech.onboundary = this.highlightWord;\n      speechSynthesis.speak(this.speech);\n    },\n    highlightWord(event) {\n      if (event.name === \"word\") {\n        this.currentWordIndex = this.textInput\n          .substring(-1, event.charIndex)\n          .trim()\n          .split(/\\s+/).length;\n      }\n    },\n    startGettingLetters() {\n      this.characters = this.textInput.trim().split(\"\");\n      const delay = 105;\n      this.characters.forEach((char, index) => {\n        setTimeout(() => {\n          this.currentLetterIndex = index;\n          this.currentPhoneme = this.letterMapping[char];\n        }, index * delay);\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.highlighted {\n  background-color: yellow;\n}\n.highlighted-pink {\n  background-color: pink;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;gEAgBXC,mBAAA,CAAc;;;uBAhB/BC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,mBAAA,kCAAqC,E,gBACrCH,mBAAA,CAA8D;+DAA3CI,KAAA,CAAAC,SAAS,GAAAC,MAAA;IAAEC,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC;iDAA1BJ,KAAA,CAAAC,SAAS,E,GAC5BL,mBAAA,CAAiE;IAAxDS,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAEZ,KAAK,EAAC;KAAkB,WAAS,GAExDI,mBAAA,qHAEa,EAEbA,mBAAA,yCAA4C,EAC5CH,mBAAA,CAQM,e,kBAPJC,mBAAA,CAMOa,SAAA,QAAAC,WAAA,CALmBX,KAAA,CAAAY,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBADrBjB,mBAAA,CAMO;MAJJkB,GAAG,EAAED,KAAK;MACVnB,KAAK,EAAAqB,eAAA;QAAAC,WAAA,EAAiBH,KAAK,KAAKd,KAAA,CAAAkB;MAAgB;0CAE9CL,IAAI,IAAG,GAAC,iBAAAM,UAAc,C;oCAI7BpB,mBAAA,8CAAiD,EACjDH,mBAAA,CAQM,e,kBAPJC,mBAAA,CAMOa,SAAA,QAAAC,WAAA,CALmBX,KAAA,CAAAoB,UAAU,GAA1BC,IAAI,EAAEP,KAAK;yBADrBjB,mBAAA,CAMO;MAJJkB,GAAG,EAAED,KAAK;MACVnB,KAAK,EAAAqB,eAAA;QAAA,oBAAwBF,KAAK,KAAKd,KAAA,CAAAsB;MAAkB;wBAEvDD,IAAI;oCAGXtB,mBAAA,cAAiB,EACjBH,mBAAA,CAA6B;IAAvB2B,GAAG,EAAEvB,KAAA,CAAAwB;EAAc,wBAAAC,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}