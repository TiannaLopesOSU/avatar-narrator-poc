{"ast":null,"code":"import { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0555a116\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"innerHTML\"];\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"textarea\", _normalizeProps(_guardReactiveProps($data.text)), null, 16 /* FULL_PROPS */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.speak && $options.speak(...args))\n  }, \"Speak\"), _createElementVNode(\"div\", {\n    innerHTML: $options.highlightText\n  }, null, 8 /* PROPS */, _hoisted_1), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentWord, (letter, index) => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      key: index,\n      src: $options.getImageUrl(letter)\n    }, null, 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_normalizeProps","_guardReactiveProps","$data","text","onClick","_cache","args","$options","speak","innerHTML","highlightText","_hoisted_1","_Fragment","_renderList","currentWord","letter","index","key","src","getImageUrl"],"sources":["/Users/lopesti/WebTeam/avatar-narrator-poc/src/components/NarratingAvatar.vue"],"sourcesContent":["<template>\n  <div>\n    <textarea v-bind=\"text\"></textarea>\n    <button @click=\"speak\">Speak</button>\n    <div v-html=\"highlightText\"></div>\n    <div>\n      <img\n        v-for=\"(letter, index) in currentWord\"\n        :key=\"index\"\n        :src=\"getImageUrl(letter)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport imageAEI from \"../assets/AEI.png\";\nimport imageBMP from \"../assets/BMP.png\";\nimport imageN from \"../assets/Nn.png\";\nimport imageCDGKNRSTXYZ from \"../assets/CDGKNRSTXYZ.png\";\nimport imageCHJSONSH from \"../assets/CH,J,SH.png\";\nimport imageFV from \"../assets/FV.png\";\nimport imageL from \"../assets/L.png\";\nimport imageO from \"../assets/O.png\";\nimport imageQW from \"../assets/QW.png\";\nimport imageTH from \"../assets/TH.png\";\nimport imageU from \"../assets/U.png\";\nimport imageE from \"../assets/E.png\";\n\nexport default {\n  data() {\n    return {\n      text: \"\",\n      currentIndex: 0,\n      phonemes: [\n        {\n          id: 1,\n          url: imageAEI,\n          letters: [\"a\", \"e\", \"i\"],\n          show: false,\n        },\n        {\n          id: 2,\n          url: imageBMP,\n          letters: [\"b\", \"m\", \"p\"],\n          show: false,\n        },\n        {\n          id: 3,\n          url: imageCDGKNRSTXYZ,\n          letters: [\"c\", \"d\", \"g\", \"k\", \"n\", \"r\", \"s\", \"t\", \"z\"],\n          show: false,\n        },\n        {\n          id: 4,\n          url: imageCHJSONSH,\n          letters: [\"ch\", \"j\", \"sh\"],\n          show: false,\n        },\n        {\n          id: 5,\n          url: imageFV,\n          letters: [\"f\", \"v\"],\n          show: false,\n        },\n        {\n          id: 6,\n          url: imageL,\n          letters: [\"l\"],\n          show: false,\n        },\n        {\n          id: 7,\n          url: imageO,\n          letters: [\"o\"],\n          show: false,\n        },\n        {\n          id: 8,\n          url: imageQW,\n          letters: [\"q\", \"w\"],\n          show: false,\n        },\n        {\n          id: 9,\n          url: imageTH,\n          letters: [\"t\", \"h\"],\n          show: false,\n        },\n        {\n          id: 10,\n          url: imageU,\n          letters: [\"u\"],\n          show: false,\n        },\n        {\n          id: 11,\n          url: imageN,\n          letters: [\"n\"],\n          show: false,\n        },\n        {\n          id: 12,\n          url: imageE,\n          letters: [\"e\"],\n          show: false,\n        },\n      ],\n    };\n  },\n  computed: {\n    currentWord() {\n      const words = this.text.split(\" \");\n      if (this.currentIndex > 0 && this.currentIndex < words.length) {\n        return words[this.currentIndex].split(\"\");\n      }\n      return [];\n    },\n    highlightText() {\n      const words = this.text.split(\" \");\n      return words\n        .map((word, index) => {\n          if (index === this.currentIndex) {\n            return `<span class=\"highlight\">${word}</span>`;\n          }\n          return word;\n        })\n        .join(\" \");\n    },\n  },\n  methods: {\n    speak() {\n      const words = this.text.split(\" \");\n      const utterances = [];\n      let delay = 0;\n\n      for (let i = 0; i < words.length; i++) {\n        const word = words[i];\n        const timeout = setTimeout(() => {\n          this.currentIndex = i;\n\n          const utterance = new SpeechSynthesisUtterance(word);\n          utterances.push(utterance);\n          window.speechSynthesis.speak(utterance);\n        }, delay);\n        delay += words.length * 150;\n        utterances.push(timeout);\n      }\n      setTimeout(() => {\n        this.currentIndex = -1;\n        utterances.forEach((timeout) => clearTimeout(timeout));\n      }, delay);\n    },\n    getImageUrl(letter) {\n      const letterMapping = {\n        a: imageAEI,\n        b: imageBMP,\n        c: imageCDGKNRSTXYZ,\n        ch: imageCHJSONSH,\n        d: imageFV,\n        e: imageL,\n        f: imageO,\n        g: imageQW,\n        h: imageTH,\n        i: imageU,\n        j: imageN,\n        k: imageE,\n        l: imageAEI,\n        m: imageBMP,\n        n: imageCDGKNRSTXYZ,\n        o: imageCHJSONSH,\n        p: imageFV,\n        q: imageL,\n        r: imageO,\n        s: imageQW,\n        t: imageTH,\n        u: imageU,\n        v: imageN,\n        w: imageE,\n        x: imageAEI,\n        y: imageBMP,\n        z: imageCDGKNRSTXYZ,\n      };\n      const lowerCaseLetter = letter.toLowerCase();\n      if (lowerCaseLetter in letterMapping) {\n        return letterMapping[lowerCaseLetter];\n      }\n      return \"\"; // default image\n    },\n  },\n};\n</script>\n\n<style scoped>\n.highlighted {\n  background-color: yellow;\n}\n</style>\n"],"mappings":";;;;;uBACEA,mBAAA,CAWM,cAVJC,mBAAA,CAAmC,YAAAC,eAAA,CAAAC,mBAAA,CAAjBC,KAAA,CAAAC,IAAI,gCACtBJ,mBAAA,CAAqC;IAA5BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,OAAK,GAC5BP,mBAAA,CAAkC;IAA7BU,SAAsB,EAAdF,QAAA,CAAAG;EAAa,wBAAAC,UAAA,GAC1BZ,mBAAA,CAMM,e,kBALJD,mBAAA,CAIEc,SAAA,QAAAC,WAAA,CAH0BN,QAAA,CAAAO,WAAW,GAA7BC,MAAM,EAAEC,KAAK;yBADvBlB,mBAAA,CAIE;MAFCmB,GAAG,EAAED,KAAK;MACVE,GAAG,EAAEX,QAAA,CAAAY,WAAW,CAACJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}