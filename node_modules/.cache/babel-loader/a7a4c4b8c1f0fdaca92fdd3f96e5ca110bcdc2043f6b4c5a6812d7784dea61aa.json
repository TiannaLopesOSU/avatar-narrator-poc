{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport imageAEI from \"../assets/AEI.png\";\nimport imageBMP from \"../assets/BMP.png\";\nimport imageN from \"../assets/Nn.png\";\nimport imageCDGKNRSTXYZ from \"../assets/CDGKNRSTXYZ.png\";\nimport imageCHJSONSH from \"../assets/CH,J,SH.png\";\nimport imageFV from \"../assets/FV.png\";\nimport imageL from \"../assets/L.png\";\nimport imageO from \"../assets/O.png\";\nimport imageQW from \"../assets/QW.png\";\nimport imageTH from \"../assets/TH.png\";\nimport imageU from \"../assets/U.png\";\nimport imageE from \"../assets/E.png\";\nexport default {\n  data() {\n    return {\n      text: \"Hello there dear friend how is your day going \",\n      letter: \"\",\n      currentIndex: 0,\n      currentLetterIndex: 0,\n      letterMapping: {\n        a: imageAEI,\n        b: imageBMP,\n        c: imageCDGKNRSTXYZ,\n        ch: imageCHJSONSH,\n        d: imageFV,\n        e: imageL,\n        f: imageO,\n        g: imageQW,\n        h: imageTH,\n        i: imageU,\n        j: imageN,\n        k: imageE,\n        l: imageAEI,\n        m: imageBMP,\n        n: imageCDGKNRSTXYZ,\n        o: imageCHJSONSH,\n        p: imageFV,\n        q: imageL,\n        r: imageO,\n        s: imageQW,\n        t: imageTH,\n        u: imageU,\n        v: imageN,\n        w: imageE,\n        x: imageAEI,\n        y: imageBMP,\n        z: imageCDGKNRSTXYZ\n      }\n      // phonemes: [\n      //   {\n      //     id: 1,\n      //     url: imageAEI,\n      //     letters: [\"a\", \"e\", \"i\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 2,\n      //     url: imageBMP,\n      //     letters: [\"b\", \"m\", \"p\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 3,\n      //     url: imageCDGKNRSTXYZ,\n      //     letters: [\"c\", \"d\", \"g\", \"k\", \"n\", \"r\", \"s\", \"t\", \"z\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 4,\n      //     url: imageCHJSONSH,\n      //     letters: [\"ch\", \"j\", \"sh\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 5,\n      //     url: imageFV,\n      //     letters: [\"f\", \"v\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 6,\n      //     url: imageL,\n      //     letters: [\"l\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 7,\n      //     url: imageO,\n      //     letters: [\"o\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 8,\n      //     url: imageQW,\n      //     letters: [\"q\", \"w\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 9,\n      //     url: imageTH,\n      //     letters: [\"t\", \"h\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 10,\n      //     url: imageU,\n      //     letters: [\"u\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 11,\n      //     url: imageN,\n      //     letters: [\"n\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 12,\n      //     url: imageE,\n      //     letters: [\"e\"],\n      //     show: false,\n      //   },\n      // ],\n    };\n  },\n\n  computed: {\n    currentWord() {\n      const words = this.text.split(\" \");\n      if (this.currentIndex > 0 && this.currentIndex < words.length) {\n        return words[this.currentIndex].split(\"\");\n      }\n      return [];\n    },\n    highlightText() {\n      const words = this.text.split(\" \");\n      return words.map((word, index) => {\n        if (index === this.currentIndex) {\n          return `<span class=\"highlight\">${word}</span>`;\n        }\n        return word;\n      }).join(\" \");\n    },\n    getImageUrl() {\n      console.log(this.currentLetterIndex);\n      return this.letterMapping[this.currentWord[this.currentLetterIndex].toLowerCase()] ? this.letterMapping[this.currentWord[this.currentLetterIndex].toLowerCase()] : \"\";\n    }\n  },\n  methods: {\n    speak() {\n      const words = this.text.split(\" \");\n      const utterances = [];\n      for (let i = 0; i < words.length; i++) {\n        const word = words[i];\n        this.currentIndex = i;\n        const utterance = new SpeechSynthesisUtterance(word);\n        utterance.rate = 0.25;\n        utterances.push(utterance);\n        window.speechSynthesis.speak(utterance);\n        for (let j = i + 1; j < words.length; j++) {\n          setTimeout(() => {\n            this.letter = words[j];\n            this.currentLetterIndex = j;\n          }, 1000);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["imageAEI","imageBMP","imageN","imageCDGKNRSTXYZ","imageCHJSONSH","imageFV","imageL","imageO","imageQW","imageTH","imageU","imageE","data","text","letter","currentIndex","currentLetterIndex","letterMapping","a","b","c","ch","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","computed","currentWord","words","split","length","highlightText","map","word","index","join","getImageUrl","console","log","toLowerCase","methods","speak","utterances","utterance","SpeechSynthesisUtterance","rate","push","window","speechSynthesis","setTimeout"],"sources":["/Users/lopesti/WebTeam/avatar-narrator-poc/src/components/NarratingAvatar.vue"],"sourcesContent":["<template>\n  <div>\n    <textarea v-model=\"text\"></textarea>\n    <button @click=\"speak\">Speak</button>\n    <div v-html=\"highlightText\"></div>\n    <div>\n      <img\n        v-for=\"(letter, index) in currentWord\"\n        :key=\"index\"\n        :src=\"getImageUrl\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport imageAEI from \"../assets/AEI.png\";\nimport imageBMP from \"../assets/BMP.png\";\nimport imageN from \"../assets/Nn.png\";\nimport imageCDGKNRSTXYZ from \"../assets/CDGKNRSTXYZ.png\";\nimport imageCHJSONSH from \"../assets/CH,J,SH.png\";\nimport imageFV from \"../assets/FV.png\";\nimport imageL from \"../assets/L.png\";\nimport imageO from \"../assets/O.png\";\nimport imageQW from \"../assets/QW.png\";\nimport imageTH from \"../assets/TH.png\";\nimport imageU from \"../assets/U.png\";\nimport imageE from \"../assets/E.png\";\n\nexport default {\n  data() {\n    return {\n      text: \"Hello there dear friend how is your day going \",\n      letter: \"\",\n      currentIndex: 0,\n      currentLetterIndex: 0,\n      letterMapping: {\n        a: imageAEI,\n        b: imageBMP,\n        c: imageCDGKNRSTXYZ,\n        ch: imageCHJSONSH,\n        d: imageFV,\n        e: imageL,\n        f: imageO,\n        g: imageQW,\n        h: imageTH,\n        i: imageU,\n        j: imageN,\n        k: imageE,\n        l: imageAEI,\n        m: imageBMP,\n        n: imageCDGKNRSTXYZ,\n        o: imageCHJSONSH,\n        p: imageFV,\n        q: imageL,\n        r: imageO,\n        s: imageQW,\n        t: imageTH,\n        u: imageU,\n        v: imageN,\n        w: imageE,\n        x: imageAEI,\n        y: imageBMP,\n        z: imageCDGKNRSTXYZ,\n      },\n      // phonemes: [\n      //   {\n      //     id: 1,\n      //     url: imageAEI,\n      //     letters: [\"a\", \"e\", \"i\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 2,\n      //     url: imageBMP,\n      //     letters: [\"b\", \"m\", \"p\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 3,\n      //     url: imageCDGKNRSTXYZ,\n      //     letters: [\"c\", \"d\", \"g\", \"k\", \"n\", \"r\", \"s\", \"t\", \"z\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 4,\n      //     url: imageCHJSONSH,\n      //     letters: [\"ch\", \"j\", \"sh\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 5,\n      //     url: imageFV,\n      //     letters: [\"f\", \"v\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 6,\n      //     url: imageL,\n      //     letters: [\"l\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 7,\n      //     url: imageO,\n      //     letters: [\"o\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 8,\n      //     url: imageQW,\n      //     letters: [\"q\", \"w\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 9,\n      //     url: imageTH,\n      //     letters: [\"t\", \"h\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 10,\n      //     url: imageU,\n      //     letters: [\"u\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 11,\n      //     url: imageN,\n      //     letters: [\"n\"],\n      //     show: false,\n      //   },\n      //   {\n      //     id: 12,\n      //     url: imageE,\n      //     letters: [\"e\"],\n      //     show: false,\n      //   },\n      // ],\n    };\n  },\n  computed: {\n    currentWord() {\n      const words = this.text.split(\" \");\n      if (this.currentIndex > 0 && this.currentIndex < words.length) {\n        return words[this.currentIndex].split(\"\");\n      }\n      return [];\n    },\n    highlightText() {\n      const words = this.text.split(\" \");\n      return words\n        .map((word, index) => {\n          if (index === this.currentIndex) {\n            return `<span class=\"highlight\">${word}</span>`;\n          }\n          return word;\n        })\n        .join(\" \");\n    },\n    getImageUrl() {\n      console.log(this.currentLetterIndex);\n      return this.letterMapping[\n        this.currentWord[this.currentLetterIndex].toLowerCase()\n      ]\n        ? this.letterMapping[\n            this.currentWord[this.currentLetterIndex].toLowerCase()\n          ]\n        : \"\";\n    },\n  },\n  methods: {\n    speak() {\n      const words = this.text.split(\" \");\n      const utterances = [];\n\n      for (let i = 0; i < words.length; i++) {\n        const word = words[i];\n        this.currentIndex = i;\n        const utterance = new SpeechSynthesisUtterance(word);\n        utterance.rate = 0.25;\n        utterances.push(utterance);\n        window.speechSynthesis.speak(utterance);\n        for (let j = i + 1; j < words.length; j++) {\n          setTimeout(() => {\n            this.letter = words[j];\n            this.currentLetterIndex = j;\n          }, 1000);\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.highlighted {\n  background-color: yellow;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}