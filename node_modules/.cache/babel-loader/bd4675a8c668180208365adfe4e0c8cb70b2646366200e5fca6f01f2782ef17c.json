{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"w-100 h-100 mt-5\"\n};\nconst _hoisted_2 = {\n  ref: \"hightlightContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <textarea class=\\\"w-75 m-3 p-3\\\" v-model=\\\"text\\\"></textarea> \"), _createCommentVNode(\" <button class=\\\"btn btn-primary\\\" @click=\\\"startReading\\\">Read Text</button> \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.text = $event),\n    type: \"text\",\n    placeholder: \"Enter Text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.speak && _ctx.speak(...args))\n  }, \"Read Aloud\"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.words, (word, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      class: _normalizeClass({\n        highlighted: _ctx.currentIndex === index\n      })\n    }, _toDisplayString(word), 3 /* TEXT, CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","$data","text","$event","type","placeholder","onClick","_cache","args","_ctx","speak","_hoisted_2","_Fragment","_renderList","words","word","index","key","_normalizeClass","highlighted","currentIndex"],"sources":["/Users/lopesti/WebTeam/avatar-narrator-poc/src/components/NarratingAvatar.vue"],"sourcesContent":["<template>\n  <div class=\"w-100 h-100 mt-5\">\n    <!-- <textarea class=\"w-75 m-3 p-3\" v-model=\"text\"></textarea> -->\n    <!-- <button class=\"btn btn-primary\" @click=\"startReading\">Read Text</button> -->\n\n    <input v-model=\"text\" type=\"text\" placeholder=\"Enter Text\" />\n    <button @click=\"speak\">Read Aloud</button>\n    <div ref=\"hightlightContainer\">\n      <span\n        v-for=\"(word, index) in words\"\n        :key=\"index\"\n        :class=\"{ highlighted: currentIndex === index }\"\n        >{{ word }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      text: \" I am a computer reading from a text box.\",\n    };\n  },\n  methods: {\n    startReading() {\n      let speech = new SpeechSynthesisUtterance();\n      speech.lang = \"en-US\";\n      speech.text = this.text;\n      speech.volume = 1;\n      speech.rate = 0.9;\n      speech.pitch = 1;\n      window.speechSynthesis.speak(speech);\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EAMtBC,GAAG,EAAC;AAAqB;;uBANhCC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,mEAAkE,EAClEA,mBAAA,kFAAiF,E,gBAEjFC,mBAAA,CAA6D;+DAA7CC,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;iDAA9BJ,KAAA,CAAAC,IAAI,E,GACpBF,mBAAA,CAA0C;IAAjCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,KAAA,IAAAD,IAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,YAAU,GACjCR,mBAAA,CAOM,OAPNW,UAOM,I,kBANJd,mBAAA,CAKOe,SAAA,QAAAC,WAAA,CAJmBJ,IAAA,CAAAK,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBADrBnB,mBAAA,CAKO;MAHJoB,GAAG,EAAED,KAAK;MACVrB,KAAK,EAAAuB,eAAA;QAAAC,WAAA,EAAiBV,IAAA,CAAAW,YAAY,KAAKJ;MAAK;wBACzCD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}